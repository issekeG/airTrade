

{% extends 'base.html.twig' %}
{% block header %}
    <header id="header" class="header fixed-top d-flex align-items-center">
        <div class="d-flex align-items-center justify-content-between">
            <a href="{{ path('app_home') }}" class="logo d-flex align-items-center">
                <img src="{{ asset('assets/img/logo/logo-principale.png') }}" alt="dealAircraft logo" class="d-lg-block d-none">
                <img src="{{ asset('assets/img/logo/logo1.png') }}" alt="dealAircraft logo" class="d-block d-lg-none">
                <span class="d-none d-lg-block"><span class="text-danger">Deal</span>Aircraft</span>
            </a>

        </div>

        <nav class="header-nav ms-auto">
            <ul class="d-flex align-items-center">
                <li class="nav-item dropdown px-3 d-flex align-items-center">
                    {% if app.request.locale == "en" %}
                        <span class="flag-icon flag-icon-gb me-2"></span>
                    {% else %}
                        <span class="flag-icon flag-icon-{{ app.request.locale }} me-2"></span>
                    {% endif %}

                    <form method="get" action="{{ path('change-locale') }}">
                        <select name="_locale" onchange="this.form.submit()" class="form-select form-select-sm">
                            {% for code, lang in available_languages.getAvailableLanguages() %}
                                <option value="{{ code }}" {% if code == app.request.locale %}selected{% endif %}>
                                    {{ lang.label }}
                                </option>
                            {% endfor %}
                        </select>
                        {% for key, value in app.request.query.all() %}
                            {% if key != '_locale' %}
                                {% if value is iterable %}
                                    {% for v in value %}
                                        <input type="hidden" name="{{ key }}[]" value="{{ v }}">
                                    {% endfor %}
                                {% else %}
                                    <input type="hidden" name="{{ key }}" value="{{ value }}">
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                    </form>
                </li>

                <li class="nav-item dropdown pe-3">
                    <a class="nav-link btn py-1" href="{{ path('app_login') }}" style="border: 1px solid var(--primary-color) !important; color : var(--primary-color) !important;">
                        <span class="d-block d-md-none"><i class="bi bi-person-circle fs-4"></i></span>
                        <span class="d-none d-md-block"> <i class="bi bi-box-arrow-in-right me-1"></i> {{ 'login.button'|trans }}</span>
                    </a>
                </li>
            </ul>
        </nav>
    </header>
{% endblock %}

{% block sidebar %}{% endblock %}

{% block main %}
    <main>
        <div class="container mt-4">
            <section class="section register d-flex flex-column justify-content-center py-4">
                <div class="row justify-content-center">
                    <div class="col-md-9 d-flex flex-column justify-content-center">

                        <div class="py-5">
                        <span class="p-2 btn" style="background-color: var(--primary-color); color: white;">
                            {{ 'register.welcome_text'|trans }}
                        </span>
                        </div>

                        <div class="card mb-3">
                            <div class="card-body mt-4">
                                {% for flash_error in app.flashes('verify_email_error') %}
                                    <div class="alert alert-danger" role="alert">{{ flash_error }}</div>
                                {% endfor %}

                                {{ form_start(registrationForm, {
                                    'attr': {
                                        'novalidate': 'novalidate',
                                        'data-errors': {
                                            'pseudo': 'register.error.pseudo'|trans,
                                            'firstname': 'register.error.firstname'|trans,
                                            'telephone': 'register.error.telephone'|trans,
                                            'email': 'register.error.email'|trans,
                                            'email_format': 'register.error.email_format'|trans,
                                            'country': 'register.error.country'|trans,
                                            'password': 'register.error.password'|trans,
                                            'password_format': 'register.error.password_format'|trans,
                                            'terms': 'register.error.terms'|trans,
                                            'broker': 'register.error.broker'|trans,
                                            'newsletter': 'register.error.newsletter'|trans
                                        }|json_encode|raw
                                    }
                                }) }}

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-floating mb-3">
                                            {{ form_widget(registrationForm.pseudo, {'attr': {'class': 'form-control'}}) }}
                                            <label for="registration_form_pseudo">{{ 'register.pseudo'|trans }}</label>
                                            <div id="pseudo_error" class="invalid-feedback" style="display:none;">
                                                {{ 'register.error.pseudo'|trans }}
                                            </div>
                                            {{ form_errors(registrationForm.pseudo) }}
                                        </div>

                                        <div class="form-floating mb-3">
                                            {{ form_widget(registrationForm.firstname, {'attr': {'class': 'form-control'}}) }}
                                            <label for="registration_form_firstname">{{ 'register.name'|trans }}</label>
                                            {{ form_errors(registrationForm.firstname) }}
                                        </div>

                                        <div class="form-floating mb-3">
                                            {{ form_widget(registrationForm.telephone, {'attr': {'class': 'form-control'}}) }}
                                            <label for="registration_form_telephone">{{ 'register.phone'|trans }}</label>
                                            {{ form_errors(registrationForm.telephone) }}
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-floating mb-3">
                                            {{ form_widget(registrationForm.email, {'attr': {'class': 'form-control'}}) }}
                                            <label for="registration_form_email">{{ 'register.email'|trans }}</label>
                                            {{ form_errors(registrationForm.email) }}
                                        </div>

                                        <div class="form-floating mb-3">
                                            {{ form_widget(registrationForm.country, {'attr': {'class': 'form-select'}}) }}
                                            <label for="registration_form_country">{{ 'register.country'|trans }}</label>
                                            {{ form_errors(registrationForm.country) }}
                                        </div>

                                        <div class="form-floating mb-3">
                                            {{ form_widget(registrationForm.plainPassword, {'attr': {'class': 'form-control'}}) }}
                                            <label for="registration_form_plainPassword">{{ 'register.password'|trans }}</label>
                                            {{ form_errors(registrationForm.plainPassword) }}
                                        </div>
                                    </div>
                                </div>

                                <hr>

                                <div class="form-check">
                                    {{ form_widget(registrationForm.acceptTerms, {'attr': {'class': 'form-check-input'}}) }}
                                    <label class="form-check-label" for="registration_form_acceptTerms">
                                        <small>{{ 'register.terms'|trans }}</small>
                                    </label>
                                </div>

                                <hr>

                                <div class="form-check">
                                    {{ form_widget(registrationForm.acceptNewsletter, {'attr': {'class': 'form-check-input'}}) }}
                                    <label class="form-check-label" for="registration_form_acceptNewsletter">
                                        <small>{{ 'register.newsletter'|trans }}</small>
                                    </label>
                                </div>

                                <hr>

                                <div class="form-check">
                                    {{ form_widget(registrationForm.acceptBrokerageContact, {'attr': {'class': 'form-check-input'}}) }}
                                    <label class="form-check-label" for="registration_form_acceptBrokerageContact">
                                        <small>{{ 'register.broker_contact'|trans }}</small>
                                    </label>
                                </div>

                                <hr>

                                <button class="btn text-white border-0" type="submit" style="background-color: var(--primary-color);">
                                    {{ 'register.submit'|trans }}
                                </button>

                                {{ form_end(registrationForm) }}
                            </div>
                        </div>

                    </div>
                </div>
            </section>
        </div>

        <script src="{{ asset('assets/vendor/jquery/jquery-3.7.1.min.js') }}"></script>
        <script>
            $(function () {
                const form = $('form[name="registration_form"]');
                const errors = form.data('errors');
                let isPseudoTaken = false; // ✅ Contrôle du pseudo pris

                function t(key) {
                    return errors[key] || 'Erreur';
                }

                function addError(input, message) {
                    if (!input.hasClass('is-invalid')) {
                        input.addClass('is-invalid');
                        input.after(`<div class="invalid-feedback">${message}</div>`);
                    }
                }

                form.on('input change', '.is-invalid', function () {
                    $(this).removeClass('is-invalid').next('.invalid-feedback').remove();
                });

                $('#registration_form_pseudo').on('input', function () {
                    const pseudo = $(this).val();
                    if (pseudo.length >= 3) {
                        $.ajax({
                            url: '{{ path('check_pseudo') }}',
                            type: 'GET',
                            data: { pseudo },
                            success(response) {
                                if (response.exists) {
                                    isPseudoTaken = true; // ✅ Marquer comme pris
                                    $('#pseudo_error')
                                        .text("{{ 'register.error.pseudo_taken'|trans }}")
                                        .show();
                                    $('#registration_form_pseudo').addClass('is-invalid');
                                } else {
                                    isPseudoTaken = false;
                                    $('#pseudo_error').hide();
                                    $('#registration_form_pseudo').removeClass('is-invalid');
                                }
                            },
                            error() {
                                alert('An error occurred while checking the username.');
                            }
                        });
                    } else {
                        isPseudoTaken = false;
                        $('#pseudo_error').hide();
                        $('#registration_form_pseudo').removeClass('is-invalid');
                    }
                });

                form.on('submit', function (e) {
                    let isValid = true;
                    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    const passwordPattern = /^(?=.*[A-Z]).{6,}$/;

                    form.find('.is-invalid').removeClass('is-invalid');
                    form.find('.invalid-feedback').remove();

                    const requiredFields = [
                        { id: '#registration_form_pseudo', key: 'pseudo' },
                        { id: '#registration_form_firstname', key: 'firstname' },
                        { id: '#registration_form_telephone', key: 'telephone' },
                        { id: '#registration_form_email', key: 'email' },
                        { id: '#registration_form_country', key: 'country' },
                        { id: '#registration_form_plainPassword', key: 'password' },
                    ];

                    requiredFields.forEach(field => {
                        const input = $(field.id);
                        if (!input.val().trim()) {
                            addError(input, t(field.key));
                            isValid = false;
                        }
                    });

                    const email = $('#registration_form_email').val().trim();
                    if (email && !emailPattern.test(email)) {
                        addError($('#registration_form_email'), t('email_format'));
                        isValid = false;
                    }

                    const password = $('#registration_form_plainPassword').val().trim();
                    if (password && !passwordPattern.test(password)) {
                        addError($('#registration_form_plainPassword'), t('password_format'));
                        isValid = false;
                    }

                    const checkboxes = [
                        { id: '#registration_form_acceptTerms', key: 'terms' },
                        { id: '#registration_form_acceptBrokerageContact', key: 'broker' },
                        { id: '#registration_form_acceptNewsletter', key: 'newsletter' },
                    ];

                    checkboxes.forEach(field => {
                        const input = $(field.id);
                        if (!input.is(':checked')) {
                            addError(input, t(field.key));
                            isValid = false;
                        }
                    });

                    // ✅ Vérification du pseudo
                    if (isPseudoTaken) {
                        addError($('#registration_form_pseudo'), "{{ 'register.error.pseudo_taken'|trans }}");
                        isValid = false;
                    }

                    if (!isValid) e.preventDefault();
                });
            });
        </script>

    </main>


{% endblock %}


{% block footer %}
{% endblock %}

